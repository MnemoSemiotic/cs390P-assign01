2017_09_05
    Though I had been working in Cloud9, I decided to get Rails to work on my local machine.  I had used Mamp Pro in the past, and for some reason, the MAMP file tree had usurped the ruby control, making it impossible to update or get a rails build up and running.  I uninstalled MAMP and removed its entries from the hosts file.
    I attempted multiple times to upgrade the default Ruby version using brew and rbenv (https://onvinetech.wordpress.com/2017/05/26/how-to-install-ruby-on-rails-on-macos-sierra-10-12/).  However, when I checked ruby -v, it kept returning version 2.0.0.
    Eventually I decided to install RVM to see if that would strongarm the most recent version of Ruby into place.  I followed the tutorial at http://railsapps.github.io/installrubyonrails-mac.html.  Though this worked for the Ruby upgrade, I was still failing my rails build.  After running through the set of command line instructions five times, including reinstalling the x-code dev tools, I was able to build rails and run the server.  Below is the list of commands, in order, that I ran.

    $ brew install gpg
    $ command curl -sSl https://rvm.io/mpapis.asc | gpg --import -
    ## the above command was unable to establish encryption
    $ \curl -L https://get.rvm.io | bash -s stable
    $ rvm get stable --autolibs=enable
    ## I ran the above command on attempts after the first one, since it is just an update for rvm

    ## to refresh the terminal
    $ source ~/.rvm/scripts/rvm
    
    $ rvm install ruby-2.4.1
    $ ruby -v
    ## which returned ruby 2.4.1

    $ gem update --system
    ## I suspected the issue was in some sort of gem corruption, though ultimately I belive reinstalling x-code dev tools was the key

    $ gem update
    ## I ran this to follow the tutorial, though I am unsure how it is different from the prior gem update command

    $ gem install bundler
    ## My install seemed to be failing on bundler, but I'm not convinced that that was the problem.  At any rate, this install did fine.

    $ gem install nokogiri
    ## this failed a couple times

    $ rvm use ruby-2.4.1@rails5.1 --create
    $ gem install rails
    
    $ mkdir workspace
    ## for projects, sitting in my cs390P folder

    $ cd workspace
    $ mkdir appName
    $ cd appName
    $ rvm use ruby-2.4.1@appName --ruby-version --create
    $ gem install rails
    $ rails new .

    Obviously there's some redundancy in the above, but this is what worked.  I have tried many times in the past to install a rails build, but I think other environments have always been conflicting.  I think the above set of commands can get me to a sort of ground zero.


2017_09_12
    Created a git repository for the assignment 1 project and put my assignOneLog.txt document into it.  AssignOneLog.txt is where I'm keeping notes about what I'm doing generally. 
    I used $ rails new profpanel to create the rails app.  I ran rails server in the profpanel directory and the application ran successfully (Screen Shot 2017-09-12 at 6.55.23 P).
    I performed
        $ git add .
        $ git commit -m "added initial rails build"
        $ git push

2017_09_13
    I created a branch in which to add the scaffold using these commands:
        $ git branch addscaffold
        $ git checkout testing

    I read through the materials at https://www.tutorialspoint.com/ruby-on-rails/rails-scaffolding.htm, to try to understand best the way to create the professor.  It is currently unclear to me from the provided PowerPoints if I need to create scaffolds for professor, course, and section, or if I should run scaffold only once.  I'm making changes on my new branch so that I can roll back if I find a better answer.
        $ rails generate scaffold Professor professorname:string professorid:integer

     I had a bit of trouble figuring out what was happening between my addscaffold branch and the master branch, but I finally was able to push.  I had to set the receiving repository with 
        $ git push --set-upstream origin addscaffold

     I then ran
        $ rails server
     which gave me the error page (Screen Shot 2017-09-13 at 9.34.57 AM).  As per the suggestion on the error page, I ran
        $ bin/rails db:migrate RAILS_ENV=development
     after that, I started the server and there was no error message.
     
     This is the current list of routes:
        $ rails routes #(Screen Shot 2017-09-13 at 10.13.25 AM)

     This is what is in the /profpanel/app/models/professor.rb
        (Screen Shot 2017-09-13 at 10.15.49 AM)

     This a screenshot of http://localhost:3000/professors
        (Screen Shot 2017-09-13 at 10.18.07 AM)



     NEXT: ADD A PROFESSOR

     
